!function(t){var n={};function e(o){if(n[o])return n[o].exports;var r=n[o]={i:o,l:!1,exports:{}};return t[o].call(r.exports,r,r.exports,e),r.l=!0,r.exports}e.m=t,e.c=n,e.d=function(t,n,o){e.o(t,n)||Object.defineProperty(t,n,{enumerable:!0,get:o})},e.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},e.t=function(t,n){if(1&n&&(t=e(t)),8&n)return t;if(4&n&&"object"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(e.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&n&&"string"!=typeof t)for(var r in t)e.d(o,r,function(n){return t[n]}.bind(null,r));return o},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},e.p="",e(e.s=0)}([function(t,n,e){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var o,r,i,u=e(1);!function(t){t.Connected="CONNECTED",t.Disconnected="DISCONNECTED",t.Scanning="SCANNING"}(o||(o={})),function(t){t.NotSupported="NOT_SUPPORTED",t.SupportedAndEnabled="SUPPORTED_AND_ENABLED",t.SupportedNotEnabled="SUPPORTED_NOT_ENABLED"}(r||(r={})),function(t){t.V1="V1",t.Mesh="MESH"}(i||(i={}));var c=function(){function t(){this.User=u.default}return t.prototype.getApplicationBuildId=function(){return new Promise(function(t,n){cordova.exec(t,n,"GoTenna","getApplicationBuildId",[])})},t.prototype.hasSuperToken=function(){return new Promise(function(t,n){cordova.exec(function(n){t("true"===n)},n,"GoTenna","hasSuperToken",[])})},t.prototype.isInDebugMode=function(){return new Promise(function(t,n){cordova.exec(function(n){t("true"===n)},n,"GoTenna","isInDebugMode",[])})},t.prototype.setApplicationToken=function(t){cordova.exec(function(t){console.log("goTenna: Application Token set")},function(t){console.error("goTenna: Invalid goTenna App Token")},"GoTenna","setApplicationToken",[t])},t.prototype.tokenIsVerified=function(){return new Promise(function(t,n){cordova.exec(function(n){t("true"===n)},n,"GoTenna","tokenIsVerified",[])})},t.prototype.bluetoothIsEnabled=function(){return new Promise(function(t,n){cordova.exec(function(n){t("true"===n)},n,"GoTenna","bluetoothIsEnabled",[])})},t.prototype.deviceSupportsBluetooth=function(){return new Promise(function(t,n){cordova.exec(function(n){t("true"===n)},n,"GoTenna","deviceSupportsBluetooth",[])})},t.prototype.disableBluetooth=function(){cordova.exec(function(){},function(t){throw new Error(t)},"GoTenna","disableBluetooth",[])},t.prototype.getBluetoothStatus=function(){return new Promise(function(t,n){cordova.exec(t,n,"GoTenna","getBluetoothStatus",[])})},t.prototype.showRequestBluetoothPermissionDialog=function(){cordova.exec(function(){},function(t){throw new Error(t)},"GoTenna","showRequestBluetoothPermissionDialog",[])},t.prototype.addGtConnectionListener=function(t){return new Promise(function(n,e){cordova.exec(t,e,"GoTenna","addGtConnectionListener",[]),n()})},t.prototype.clearConnectedGotennaAddress=function(){cordova.exec(function(){},function(t){throw new Error(t)},"GoTenna","clearConnectedGotennaAddress",[])},t.prototype.disconnect=function(){cordova.exec(function(){},function(t){throw new Error(t)},"GoTenna","disconnect",[])},t.prototype.disconnectWithRetry=function(){cordova.exec(function(){},function(t){throw new Error(t)},"GoTenna","disconnect",[])},t.prototype.getConnectedGotennaAddress=function(){return new Promise(function(t,n){cordova.exec(t,n,"GoTenna","getConnectedGotennaAddress",[])})},t.prototype.getGtConnectionState=function(){return new Promise(function(t,n){cordova.exec(t,n,"GoTenna","getGtConnectionState",[])})},t.prototype.isConnected=function(){return new Promise(function(t,n){cordova.exec(function(n){t("true"===n)},n,"GoTenna","isConnected",[])})},t.prototype.scanAndConnect=function(t){return new Promise(function(n,e){cordova.exec(n,e,"GoTenna","scanAndConnect",[t])})},t.prototype.stopScan=function(){return new Promise(function(t,n){cordova.exec(t,n,"GoTenna","stopScan",[])})},t.prototype.setGoTennaGID=function(t,n){return new Promise(function(e,o){cordova.exec(e,o,"GoTenna","setGoTennaGID",[t,n])})},t.prototype.sendMessage=function(t,n,e){return new Promise(function(o,r){cordova.exec(o,r,"GoTenna","sendMessage",[t,n,e])})},t.prototype.setMessageListener=function(t){return new Promise(function(n,e){cordova.exec(t,e,"GoTenna","setMessageListener",[]),n()})},t.prototype.addGroupGID=function(t){cordova.exec(function(){},function(t){throw new Error(t)},"GoTenna","addGroupGID",[t])},t.prototype.addMulticastGroupGID=function(t){cordova.exec(function(){},function(t){throw new Error(t)},"GoTenna","addMulticastGroupGID",[t])},t.prototype.deleteCurrentUser=function(){cordova.exec(function(){},function(t){throw new Error(t)},"GoTenna","deleteCurrentUser",[])},t.prototype.deleteGroupGID=function(t){cordova.exec(function(){},function(t){throw new Error(t)},"GoTenna","deleteGroupGID",[t])},t.prototype.deleteMulticastGroupGID=function(t){cordova.exec(function(){},function(t){throw new Error(t)},"GoTenna","deleteMulticastGroupGID",[t])},t.prototype.getCurrentUser=function(){return new Promise(function(t,n){cordova.exec(function(n){t(""===n?void 0:new u.default(JSON.parse(n)))},n,"GoTenna","getCurrentUser",[])})},t.prototype.hasGroupGID=function(t){return new Promise(function(n,e){cordova.exec(function(t){n("true"===t)},e,"GoTenna","hasGroupGID",[t])})},t.prototype.hasMulticastGroupGID=function(t){return new Promise(function(n,e){cordova.exec(function(t){n("true"===t)},e,"GoTenna","hasMulticastGroupGID",[t])})},t.prototype.hasValidUser=function(){return new Promise(function(t,n){cordova.exec(function(n){t("true"===n)},n,"GoTenna","hasValidUser",[])})},t.prototype.isMyGID=function(t){return new Promise(function(n,e){cordova.exec(function(t){n("true"===t)},e,"GoTenna","isMyGID",[t])})},t.prototype.registerUser=function(t,n){return new Promise(function(e,o){cordova.exec(function(t){return e(new u.default(JSON.parse(t)))},o,"GoTenna","registerUser",[t,n])})},t.prototype.saveCurrentUser=function(){cordova.exec(function(){},function(t){throw new Error(t)},"GoTenna","saveCurrentUser",[])},t.prototype.setCurrentUser=function(t){var n=JSON.stringify(t);cordova.exec(function(){},function(t){throw new Error(t)},"GoTenna","setCurrentUser",[n])},t.prototype.updateLastConnectedTime=function(){cordova.exec(function(){},function(t){throw new Error(t)},"GoTenna","updateLastConnectedTime",[])},t.prototype.updateLastLocation=function(t,n,e,o){cordova.exec(function(){},function(t){throw new Error(t)},"GoTenna","updateLastLocation",[t,n,e,o])},t}();window.gotenna=new c},function(t,n,e){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var o=function(){function t(t){t?(this.gid=t.gid||0,this.kGroupGIDs=t.kGroupGIDs||[],this.kMulticastGroupGIDs=t.kMulticastGroupGIDs||[],this.lastConnectedTime=t.lastConnectedTime||null,this.latitude=t.latitude||null,this.locationAccuracy=t.locationAccuracy||null,this.locationTimestamp=t.locationTimestamp||null,this.longitude=t.longitude||null,this.name=t.name||""):(this.gid=0,this.kGroupGIDs=[],this.kMulticastGroupGIDs=[],this.lastConnectedTime=null,this.latitude=null,this.locationAccuracy=null,this.locationTimestamp=null,this.longitude=null,this.name="")}return t.createUser=function(n,e){return new t({name:n,gid:e})},t.prototype.addGroupGID=function(t){this.kGroupGIDs.push(t)},t.prototype.addMulticstGroupGID=function(t){this.kMulticastGroupGIDs.push(t)},t.prototype.deleteGroupGID=function(t){var n=this.kGroupGIDs.indexOf(t);n>-1&&this.kGroupGIDs.splice(n,1)},t.prototype.deleteMulticastGroupGID=function(t){var n=this.kMulticastGroupGIDs.indexOf(t);n>-1&&this.kMulticastGroupGIDs.splice(n,1)},t.prototype.getGID=function(){return this.gid},t.prototype.getGroupGIDs=function(){return this.kGroupGIDs},t.prototype.getLastConnectedTime=function(){return this.lastConnectedTime},t.prototype.getLastLocation=function(){return{accuracy:this.locationAccuracy,altitude:null,altitudeAccuracy:null,heading:null,latitude:this.latitude,longitude:this.longitude,speed:null}},t.prototype.getLastPosition=function(){return{coords:{accuracy:this.locationAccuracy,altitude:null,altitudeAccuracy:null,heading:null,latitude:this.latitude,longitude:this.longitude,speed:null},timestamp:this.locationTimestamp}},t.prototype.getMulticastGroupGIDs=function(){return this.kMulticastGroupGIDs},t.prototype.getName=function(){return this.name},t.prototype.hasGroupGID=function(t){return this.kGroupGIDs.includes(t)},t.prototype.hasMulticastGroupGID=function(t){return this.kMulticastGroupGIDs.includes(t)},t.prototype.initials=function(){return this.name?this.name.split(/\s/g).map(function(t){return t[0].toUpperCase()}).join(""):""},t.prototype.setGID=function(t){this.gid=t},t.prototype.setLastConnectedTime=function(t){this.lastConnectedTime=t},t.prototype.setName=function(t){this.name=t},t.prototype.updateLocation=function(t,n,e,o){this.latitude=t,this.longitude=n,this.locationAccuracy=e,this.locationTimestamp=o},t.prototype.updatePosition=function(t){this.latitude=t.coords.latitude,this.longitude=t.coords.longitude,this.locationAccuracy=t.coords.accuracy,this.locationTimestamp=t.timestamp},t}();n.default=o}]);